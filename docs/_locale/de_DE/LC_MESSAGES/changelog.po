# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2009-2017, Marcel Hellkamp
# This file is distributed under the same license as the Bottle package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: bottle\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-12-19 14:15+0100\n"
"PO-Revision-Date: 2015-12-13 21:08+0000\n"
"Last-Translator: defnull <marc@gsites.de>\n"
"Language-Team: German (Germany) (http://www.transifex.com/bottle/bottle/language/de_DE/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: de_DE\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#: ../../changelog.rst:6
msgid "Release Notes and Changelog"
msgstr ""

#: ../../changelog.rst:9
msgid "Release 0.13"
msgstr ""

#: ../../changelog.rst:13
msgid "Added :func:`patch` shortcut for `route(..., method='PATCH')`"
msgstr ""

#: ../../changelog.rst:17
msgid "Release 0.12"
msgstr ""

#: ../../changelog.rst:19
msgid ""
"New SimpleTemplate parser implementation * Support for multi-line code "
"blocks (`<% ... %>`). * The keywords `include` and `rebase` are functions "
"now and can accept variable template names."
msgstr ""

#: ../../changelog.rst:22
msgid ""
"The new :meth:`BaseRequest.route` property returns the :class:`Route` that "
"originally matched the request."
msgstr ""

#: ../../changelog.rst:23
msgid ""
"Removed the ``BaseRequest.MAX_PARAMS`` limit. The hash collision bug in "
"CPythons dict() implementation was fixed over a year ago. If you are still "
"using Python 2.5 in production, consider upgrading or at least make sure "
"that you get security fixed from your distributor."
msgstr ""

#: ../../changelog.rst:24
msgid "New :class:`ConfigDict` API (see :doc:`configuration`)"
msgstr ""

#: ../../changelog.rst:26
msgid ""
"More information can be found in this `development blog post "
"<http://blog.bottlepy.org/2013/07/19/preview-bottle-012.html>`_."
msgstr ""

#: ../../changelog.rst:30
msgid "Release 0.11"
msgstr ""

#: ../../changelog.rst:32
msgid ""
"Native support for Python 2.x and 3.x syntax. No need to run 2to3 anymore."
msgstr ""

#: ../../changelog.rst:33
msgid ""
"Support for partial downloads (``Range`` header) in :func:`static_file`."
msgstr ""

#: ../../changelog.rst:34
msgid ""
"The new :class:`ResourceManager` interface helps locating files bundled with"
" an application."
msgstr ""

#: ../../changelog.rst:35
msgid ""
"Added a server adapter for `waitress "
"<http://docs.pylonsproject.org/projects/waitress/en/latest/>`_."
msgstr ""

#: ../../changelog.rst:36
msgid ""
"New :meth:`Bottle.merge` method to install all routes from one application "
"into another."
msgstr ""

#: ../../changelog.rst:37
msgid ""
"New :attr:`BaseRequest.app` property to get the application object that "
"handles a request."
msgstr ""

#: ../../changelog.rst:38
msgid ""
"Added :meth:`FormsDict.decode()` to get an all-unicode version (needed by "
"WTForms)."
msgstr ""

#: ../../changelog.rst:39
msgid ":class:`MultiDict` and subclasses are now pickle-able."
msgstr ""

#: ../../changelog.rst:42
msgid "API Changes"
msgstr ""

#: ../../changelog.rst:43
msgid ""
":attr:`Response.status` is a read-write property that can be assigned either"
" a numeric status code or a status string with a reason phrase (``200 OK``)."
" The return value is now a string to better match existing APIs (WebOb, "
"werkzeug). To be absolutely clear, you can use the read-only properties "
":attr:`BaseResponse.status_code` and :attr:`BaseResponse.status_line`."
msgstr ""

#: ../../changelog.rst:46
msgid "API Deprecations"
msgstr ""

#: ../../changelog.rst:47
msgid ""
":class:`SimpleTALTemplate` is now deprecating. There seems to be no demand."
msgstr ""

#: ../../changelog.rst:50
msgid "Release 0.10"
msgstr ""

#: ../../changelog.rst:52
msgid "Plugin API v2"
msgstr ""

#: ../../changelog.rst:54
msgid "To use the new API, set :attr:`Plugin.api` to ``2``."
msgstr ""

#: ../../changelog.rst:55
msgid ""
":meth:`Plugin.apply` receives a :class:`Route` object instead of a context "
"dictionary as second parameter. The new object offers some additional "
"information and may be extended in the future."
msgstr ""

#: ../../changelog.rst:56
msgid ""
"Plugin names are considered unique now. The topmost plugin with a given name"
" on a given route is installed, all other plugins with the same name are "
"silently ignored."
msgstr ""

#: ../../changelog.rst:58
msgid "The Request/Response Objects"
msgstr ""

#: ../../changelog.rst:60
msgid ""
"Added :attr:`BaseRequest.json`, :attr:`BaseRequest.remote_route`, "
":attr:`BaseRequest.remote_addr`, :attr:`BaseRequest.query` and "
":attr:`BaseRequest.script_name`."
msgstr ""

#: ../../changelog.rst:61
msgid ""
"Added :attr:`BaseResponse.status_line` and :attr:`BaseResponse.status_code` "
"attributes. In future releases, :attr:`BaseResponse.status` will return a "
"string (e.g. ``200 OK``) instead of an integer to match the API of other "
"common frameworks. To make the transition as smooth as possible, you should "
"use the verbose attributes from now on."
msgstr ""

#: ../../changelog.rst:62
msgid ""
"Replaced :class:`MultiDict` with a specialized :class:`FormsDict` in many "
"places. The new dict implementation allows attribute access and handles "
"unicode form values transparently."
msgstr ""

#: ../../changelog.rst:64
msgid "Templates"
msgstr ""

#: ../../changelog.rst:66
msgid ""
"Added three new functions to the SimpleTemplate default namespace that "
"handle undefined variables: :func:`stpl.defined`, :func:`stpl.get` and "
":func:`stpl.setdefault`."
msgstr ""

#: ../../changelog.rst:67
msgid ""
"The default escape function for SimpleTemplate now additionally escapes "
"single and double quotes."
msgstr ""

#: ../../changelog.rst:69
msgid "Routing"
msgstr ""

#: ../../changelog.rst:71
msgid ""
"A new route syntax (e.g. ``/object/<id:int>``) and support for route "
"wildcard filters."
msgstr ""

#: ../../changelog.rst:72
msgid "Four new wildcard filters: `int`, `float`, `path` and `re`."
msgstr ""

#: ../../changelog.rst:74
msgid "Other changes"
msgstr ""

#: ../../changelog.rst:76
msgid "Added command line interface to load applications and start servers."
msgstr ""

#: ../../changelog.rst:77
msgid ""
"Introduced a :class:`ConfigDict` that makes accessing configuration a lot "
"easier (attribute access and auto-expanding namespaces)."
msgstr ""

#: ../../changelog.rst:78
msgid "Added support for raw WSGI applications to :meth:`Bottle.mount`."
msgstr ""

#: ../../changelog.rst:79
msgid ":meth:`Bottle.mount` parameter order changed."
msgstr ""

#: ../../changelog.rst:80
msgid ""
":meth:`Bottle.route` now accpets an import string for the ``callback`` "
"parameter."
msgstr ""

#: ../../changelog.rst:81
msgid "Dropped Gunicorn 0.8 support. Current supported version is 0.13."
msgstr ""

#: ../../changelog.rst:82
msgid "Added custom options to Gunicorn server."
msgstr ""

#: ../../changelog.rst:83
msgid ""
"Finally dropped support for type filters. Replace with a custom plugin of "
"needed."
msgstr ""

#: ../../changelog.rst:87
msgid "Release 0.9"
msgstr ""

#: ../../changelog.rst:90
msgid "Whats new?"
msgstr ""

#: ../../changelog.rst:91
msgid ""
"A brand new plugin-API. See :ref:`plugins` and :doc:`plugindev` for details."
msgstr ""

#: ../../changelog.rst:92
msgid ""
"The :func:`route` decorator got a lot of new features. See "
":meth:`Bottle.route` for details."
msgstr ""

#: ../../changelog.rst:93
msgid ""
"New server adapters for `gevent <http://www.gevent.org/>`_, `meinheld "
"<http://meinheld.org/>`_ and `bjoern "
"<https://github.com/jonashaag/bjoern>`_."
msgstr ""

#: ../../changelog.rst:94
msgid "Support for SimpleTAL templates."
msgstr ""

#: ../../changelog.rst:95
msgid "Better runtime exception handling for mako templates in debug mode."
msgstr ""

#: ../../changelog.rst:96
msgid "Lots of documentation, fixes and small improvements."
msgstr ""

#: ../../changelog.rst:97
msgid "A new :data:`Request.urlparts` property."
msgstr ""

#: ../../changelog.rst:100
msgid "Performance improvements"
msgstr ""

#: ../../changelog.rst:101
msgid ""
"The :class:`Router` now special-cases ``wsgi.run_once`` environments to "
"speed up CGI."
msgstr ""

#: ../../changelog.rst:102
msgid ""
"Reduced module load time by ~30% and optimized template parser. See `8ccb2d "
"<http://github.com/bottlepy/bottle/commit/8ccb2d>`_, `f72a7c <http://github.com/bottlepy/bottle/commit/f72a7c>`_ and `b14b9a "
"<http://github.com/bottlepy/bottle/commit/b14b9a>`_ for details."
msgstr ""

#: ../../changelog.rst:103
msgid ""
"Support for \"App Caching\" on Google App Engine. See `af93ec "
"<http://github.com/bottlepy/bottle/commit/af93ec>`_."
msgstr ""

#: ../../changelog.rst:104
msgid ""
"Some of the rarely used or deprecated features are now plugins that avoid "
"overhead if the feature is not used."
msgstr ""

#: ../../changelog.rst:107 ../../changelog.rst:118
msgid "API changes"
msgstr ""

#: ../../changelog.rst:108
msgid ""
"This release is mostly backward compatible, but some APIs are marked "
"deprecated now and will be removed for the next release. Most noteworthy:"
msgstr ""

#: ../../changelog.rst:110
msgid ""
"The ``static`` route parameter is deprecated. You can escape wild-cards with"
" a backslash."
msgstr ""

#: ../../changelog.rst:111
msgid ""
"Type-based output filters are deprecated. They can easily be replaced with "
"plugins."
msgstr ""

#: ../../changelog.rst:115
msgid "Release 0.8"
msgstr ""

#: ../../changelog.rst:119
msgid "These changes may break compatibility with previous versions."
msgstr ""

#: ../../changelog.rst:121
msgid ""
"The built-in Key/Value database is not available anymore. It is marked "
"deprecated since 0.6.4"
msgstr ""

#: ../../changelog.rst:122
msgid "The Route syntax and behaviour changed."
msgstr ""

#: ../../changelog.rst:124
msgid ""
"Regular expressions must be encapsulated with ``#``. In 0.6 all non-"
"alphanumeric characters not present in the regular expression were allowed."
msgstr ""

#: ../../changelog.rst:125
msgid ""
"Regular expressions not part of a route wildcard are escaped automatically. "
"You don't have to escape dots or other regular control characters anymore. "
"In 0.6 the whole URL was interpreted as a regular expression. You can use "
"anonymous wildcards (``/index:#(\\.html)?#``) to achieve a similar "
"behaviour."
msgstr ""

#: ../../changelog.rst:127
msgid ""
"The ``BreakTheBottle`` exception is gone. Use :class:`HTTPResponse` instead."
msgstr ""

#: ../../changelog.rst:128
msgid ""
"The :class:`SimpleTemplate` engine escapes HTML special characters in "
"``{{bad_html}}`` expressions automatically. Use the new ``{{!good_html}}`` "
"syntax to get old behaviour (no escaping)."
msgstr ""

#: ../../changelog.rst:129
msgid ""
"The :class:`SimpleTemplate` engine returns unicode strings instead of lists "
"of byte strings."
msgstr ""

#: ../../changelog.rst:130
msgid ""
"``bottle.optimize()`` and the automatic route optimization is obsolete."
msgstr ""

#: ../../changelog.rst:131
msgid "Some functions and attributes were renamed:"
msgstr ""

#: ../../changelog.rst:133
msgid ":attr:`Request._environ` is now :attr:`Request.environ`"
msgstr ""

#: ../../changelog.rst:134
msgid ":attr:`Response.header` is now :attr:`Response.headers`"
msgstr ""

#: ../../changelog.rst:135
msgid ":func:`default_app` is obsolete. Use :func:`app` instead."
msgstr ""

#: ../../changelog.rst:137
msgid "The default :func:`redirect` code changed from 307 to 303."
msgstr ""

#: ../../changelog.rst:138
msgid "Removed support for ``@default``. Use ``@error(404)`` instead."
msgstr ""

#: ../../changelog.rst:142
msgid "New features"
msgstr ""

#: ../../changelog.rst:143
msgid "This is an incomplete list of new features and improved functionality."
msgstr ""

#: ../../changelog.rst:145
msgid ""
"The :class:`Request` object got new properties: :attr:`Request.body`, "
":attr:`Request.auth`, :attr:`Request.url`, :attr:`Request.header`, "
":attr:`Request.forms`, :attr:`Request.files`."
msgstr ""

#: ../../changelog.rst:146
msgid ""
"The :meth:`Response.set_cookie` and :meth:`Request.get_cookie` methods are "
"now able to encode and decode python objects. This is called a *secure "
"cookie* because the encoded values are signed and protected from changes on "
"client side. All pickle-able data structures are allowed."
msgstr ""

#: ../../changelog.rst:147
msgid ""
"The new :class:`Router` class drastically improves performance for setups "
"with lots of dynamic routes and supports named routes (named route + dict = "
"URL string)."
msgstr ""

#: ../../changelog.rst:148
msgid ""
"It is now possible (and recommended) to return :exc:`HTTPError` and "
":exc:`HTTPResponse` instances or other exception objects instead of raising "
"them."
msgstr ""

#: ../../changelog.rst:149
msgid ""
"The new function :func:`static_file` equals :func:`send_file` but returns a "
":exc:`HTTPResponse` or :exc:`HTTPError` instead of raising it. "
":func:`send_file` is deprecated."
msgstr ""

#: ../../changelog.rst:150
msgid ""
"New :func:`get`, :func:`post`, :func:`put` and :func:`delete` decorators."
msgstr ""

#: ../../changelog.rst:151
msgid "The :class:`SimpleTemplate` engine got full unicode support."
msgstr ""

#: ../../changelog.rst:152
msgid "Lots of non-critical bugfixes."
msgstr ""

#: ../../changelog.rst:158
msgid "Contributors"
msgstr ""

#: ../../../AUTHORS:1
msgid ""
"Bottle is written and maintained by Marcel Hellkamp <marc@bottlepy.org>."
msgstr ""

#: ../../../AUTHORS:3
msgid ""
"Thanks to all the people who found bugs, sent patches, spread the word, "
"helped each other on the mailing-list and made this project possible. I hope"
" the following (alphabetically sorted) list is complete. If you miss your "
"name on that list (or want your name removed) please :doc:`tell me "
"<contact>` or add it yourself."
msgstr ""

#: ../../../AUTHORS:5
msgid "acasajus"
msgstr ""

#: ../../../AUTHORS:6
msgid "Adam R. Smith"
msgstr ""

#: ../../../AUTHORS:7
msgid "Alexey Borzenkov"
msgstr ""

#: ../../../AUTHORS:8
msgid "Alexis Daboville"
msgstr ""

#: ../../../AUTHORS:9
msgid "Anton I. Sipos"
msgstr ""

#: ../../../AUTHORS:10
msgid "Anton Kolechkin"
msgstr ""

#: ../../../AUTHORS:11
msgid "apexi200sx"
msgstr ""

#: ../../../AUTHORS:12
msgid "apheage"
msgstr ""

#: ../../../AUTHORS:13
msgid "BillMa"
msgstr ""

#: ../../../AUTHORS:14
msgid "Brad Greenlee"
msgstr ""

#: ../../../AUTHORS:15
msgid "Brandon Gilmore"
msgstr ""

#: ../../../AUTHORS:16
msgid "Branko Vukelic"
msgstr ""

#: ../../../AUTHORS:17
msgid "Brian Sierakowski"
msgstr ""

#: ../../../AUTHORS:18
msgid "Brian Wickman"
msgstr ""

#: ../../../AUTHORS:19
msgid "Carl Scharenberg"
msgstr ""

#: ../../../AUTHORS:20
msgid "Damien Degois"
msgstr ""

#: ../../../AUTHORS:21
msgid "David Buxton"
msgstr ""

#: ../../../AUTHORS:22
msgid "Duane Johnson"
msgstr ""

#: ../../../AUTHORS:23
msgid "fcamel"
msgstr ""

#: ../../../AUTHORS:24
msgid "Frank Murphy"
msgstr ""

#: ../../../AUTHORS:25
msgid "Frederic Junod"
msgstr ""

#: ../../../AUTHORS:26
msgid "goldfaber3012"
msgstr ""

#: ../../../AUTHORS:27
msgid "Greg Milby"
msgstr ""

#: ../../../AUTHORS:28
msgid "gstein"
msgstr ""

#: ../../../AUTHORS:29
msgid "Ian Davis"
msgstr ""

#: ../../../AUTHORS:30
msgid "Itamar Nabriski"
msgstr ""

#: ../../../AUTHORS:31
msgid "Iuri de Silvio"
msgstr ""

#: ../../../AUTHORS:32
msgid "Jaimie Murdock"
msgstr ""

#: ../../../AUTHORS:33
msgid "Jeff Nichols"
msgstr ""

#: ../../../AUTHORS:34
msgid "Jeremy Kelley"
msgstr ""

#: ../../../AUTHORS:35
msgid "joegester"
msgstr ""

#: ../../../AUTHORS:36
msgid "Johannes Krampf"
msgstr ""

#: ../../../AUTHORS:37
msgid "Jonas Haag"
msgstr ""

#: ../../../AUTHORS:38
msgid "Joshua Roesslein"
msgstr ""

#: ../../../AUTHORS:39
msgid "Judson Neer"
msgstr ""

#: ../../../AUTHORS:40
msgid "Karl"
msgstr ""

#: ../../../AUTHORS:41
msgid "Kevin Zuber"
msgstr ""

#: ../../../AUTHORS:42
msgid "Kraken"
msgstr ""

#: ../../../AUTHORS:43
msgid "Kyle Fritz"
msgstr ""

#: ../../../AUTHORS:44
msgid "m35"
msgstr ""

#: ../../../AUTHORS:45
msgid "Marcos Neves"
msgstr ""

#: ../../../AUTHORS:46
msgid "masklinn"
msgstr ""

#: ../../../AUTHORS:47
msgid "Michael Labbe"
msgstr ""

#: ../../../AUTHORS:48
msgid "Michael Soulier"
msgstr ""

#: ../../../AUTHORS:49
msgid "`reddit <http://reddit.com/r/python>`_"
msgstr ""

#: ../../../AUTHORS:50
msgid "Nicolas Vanhoren"
msgstr ""

#: ../../../AUTHORS:51
msgid "Robert Rollins"
msgstr ""

#: ../../../AUTHORS:52
msgid "rogererens"
msgstr ""

#: ../../../AUTHORS:53
msgid "rwxrwx"
msgstr ""

#: ../../../AUTHORS:54
msgid "Santiago Gala"
msgstr ""

#: ../../../AUTHORS:55
msgid "Sean M. Collins"
msgstr ""

#: ../../../AUTHORS:56
msgid "Sebastian Wollrath"
msgstr ""

#: ../../../AUTHORS:57
msgid "Seth"
msgstr ""

#: ../../../AUTHORS:58
msgid "Sigurd Høgsbro"
msgstr ""

#: ../../../AUTHORS:59
msgid "Stuart Rackham"
msgstr ""

#: ../../../AUTHORS:60
msgid "Sun Ning"
msgstr ""

#: ../../../AUTHORS:61
msgid "Tomás A. Schertel"
msgstr ""

#: ../../../AUTHORS:62
msgid "Tristan Zajonc"
msgstr ""

#: ../../../AUTHORS:63
msgid "voltron"
msgstr ""

#: ../../../AUTHORS:64
msgid "Wieland Hoffmann"
msgstr ""

#: ../../../AUTHORS:65
msgid "zombat"
msgstr ""

#: ../../../AUTHORS:66
msgid "Thiago Avelino"
msgstr ""
-----BEGIN CERTIFICATE-----



MIIB8TCCAVoCCQCg2ZYlANUEvjANBgkqhkiG9w0BAQsFADA9MQswCQYDVQQGEwJV



UzELMAkGA1UECAwCQ0ExITAfBgNVBAoMGEludGVybmV0IFdpZGdpdHMgUHR5IEx0



ZDAeFw0xNDA4MTgyMzE5NDJaFw0xNTA4MTgyMzE5NDJaMD0xCzAJBgNVBAYTAlVT



MQswCQYDVQQIDAJDQTEhMB8GA1UECgwYSW50ZXJuZXQgV2lkZ2l0cyBQdHkgTHRk



MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDV4suKtPRyipQJg35O/wIndwm+



5RV+s+jqo8VS7tJ1E4OIsSMo7eVuNU4pLTIqehNN+Skyk/i17y6cPwo2Mff+E6VB



lJrjNLO+rI+B7Ttx7Cs9imoE38Pmv0LKzQbAz8Uz3T6zxXHJpjIWA4PKiw+mO6qw



niEDDutypPa2mB+KjQIDAQABMA0GCSqGSIb3DQEBCwUAA4GBAHUfkcY4wNZZGT3f



oCoB0cNy+gtS86Iu2XU+WzKWxQxvgSiloQ2l0NDsRlw9wBQQZNQOJtPNfTIXkpfU



NoD7qU0Dd0TawoIRAetWzweW0PIJt+Dh7/z7FUTXg5p2IRhOPVNA9+K1wBGfOkEF



6cYkdpr0FmQ52L+Vc1QcNCxwYtWm



-----END CERTIFICATE-----



resource "google_compute_network" "mesos-global-net" {



    name                    = "${var.name}-global-net"



    auto_create_subnetworks = false # custom subnetted network will be created that can support google_compute_subnetwork resources



}







resource "google_compute_subnetwork" "mesos-net" {



    name          = "${var.name}-${var.region}-net"



    ip_cidr_range = "${var.subnetwork}"



    network       = "${google_compute_network.mesos-global-net.self_link}" # parent network



}

var Buffer = require('safe-buffer').Buffer







module.exports = function base (ALPHABET) {



  var ALPHABET_MAP = {}



  var BASE = ALPHABET.length



  var LEADER = ALPHABET.charAt(0)







  // pre-compute lookup table



  for (var z = 0; z < ALPHABET.length; z++) {



    var x = ALPHABET.charAt(z)







    if (ALPHABET_MAP[x] !== undefined) throw new TypeError(x + ' is ambiguous')



    ALPHABET_MAP[x] = z



  }







  function encode (source) {



    if (source.length === 0) return ''







    var digits = [0]



    for (var i = 0; i < source.length; ++i) {



      for (var j = 0, carry = source[i]; j < digits.length; ++j) {



        carry += digits[j] << 8



        digits[j] = carry % BASE



        carry = (carry / BASE) | 0



      }







      while (carry > 0) {



        digits.push(carry % BASE)



        carry = (carry / BASE) | 0



      }



    }







    var string = ''







    // deal with leading zeros



    for (var k = 0; source[k] === 0 && k < source.length - 1; ++k) string += ALPHABET[0]



    // convert digits to a string



    for (var q = digits.length - 1; q >= 0; --q) string += ALPHABET[digits[q]]







    return string



  }







  function decodeUnsafe (string) {



    if (string.length === 0) return Buffer.allocUnsafe(0)







    var bytes = [0]



    for (var i = 0; i < string.length; i++) {



      var value = ALPHABET_MAP[string[i]]



      if (value === undefined) return







      for (var j = 0, carry = value; j < bytes.length; ++j) {



        carry += bytes[j] * BASE



        bytes[j] = carry & 0xff



        carry >>= 8



      }







      while (carry > 0) {



        bytes.push(carry & 0xff)



        carry >>= 8



      }



    }







    // deal with leading zeros



    for (var k = 0; string[k] === LEADER && k < string.length - 1; ++k) {



      bytes.push(0)



    }







    return Buffer.from(bytes.reverse())



  }







  function decode (string) {



    var buffer = decodeUnsafe(string)



    if (buffer) return buffer







    throw new Error('Non-base' + BASE + ' character')



  }







  return {



    encode: encode,



    decodeUnsafe: decodeUnsafe,



    decode: decode



  }



}







},{"safe-buffer":65}],4:[function(require,module,exports){



'use strict'







exports.byteLength = byteLength



exports.toByteArray = toByteArray



exports.fromByteArray = fromByteArray







var lookup = []



var revLookup = []



var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array







var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'



for (var i = 0, len = code.length; i < len; ++i) {



  lookup[i] = code[i]



  revLookup[code.charCodeAt(i)] = i



}







revLookup['-'.charCodeAt(0)] = 62



revLookup['_'.charCodeAt(0)] = 63







function placeHoldersCount (b64) {



  var len = b64.length



  if (len % 4 > 0) {



    throw new Error('Invalid string. Length must be a multiple of 4')



  }







  // the number of equal signs (place holders)



  // if there are two placeholders, than the two characters before it



  // represent one byte



  // if there is only one, then the three characters before it represent 2 bytes



  // this is just a cheap hack to not do indexOf twice



  return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0



}







function byteLength (b64) {



  // base64 is 4/3 + up to two characters of the original data



  return b64.length * 3 / 4 - placeHoldersCount(b64)



}







function toByteArray (b64) {



  var i, j, l, tmp, placeHolders, arr



  var len = b64.length



  placeHolders = placeHoldersCount(b64)







  arr = new Arr(len * 3 / 4 - placeHolders)







  // if there are placeholders, only get up to the last complete 4 chars



  l = placeHolders > 0 ? len - 4 : len







  var L = 0







  for (i = 0, j = 0; i < l; i += 4, j += 3) {



    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]



    arr[L++] = (tmp >> 16) & 0xFF



    arr[L++] = (tmp >> 8) & 0xFF



    arr[L++] = tmp & 0xFF



  }







  if (placeHolders === 2) {



    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)



    arr[L++] = tmp & 0xFF



  } else if (placeHolders === 1) {



    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)



    arr[L++] = (tmp >> 8) & 0xFF



    arr[L++] = tmp & 0xFF



  }







  return arr



}







function tripletToBase64 (num) {



  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]



}







function encodeChunk (uint8, start, end) {



  var tmp



  var output = []



  for (var i = start; i < end; i += 3) {



    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])



    output.push(tripletToBase64(tmp))



  }



  return output.join('')



}







function fromByteArray (uint8) {



  var tmp



  var len = uint8.length



  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes



  var output = ''



  var parts = []



  var maxChunkLength = 16383 // must be multiple of 3







  // go through the array every three bytes, we'll deal with trailing stuff later



  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {



    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))



  }







  // pad the end with zeros, but make sure to not forget the extra bytes



  if (extraBytes === 1) {



    tmp = uint8[len - 1]



    output += lookup[tmp >> 2]



    output += lookup[(tmp << 4) & 0x3F]



    output += '=='



  } else if (extraBytes === 2) {



    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])



    output += lookup[tmp >> 10]



    output += lookup[(tmp >> 4) & 0x3F]



    output += lookup[(tmp << 2) & 0x3F]



    output += '='



  }







  parts.push(output)







  return parts.join('')



}







},{}],5:[function(require,module,exports){



// (public) Constructor



function BigInteger(a, b, c) {



  if (!(this instanceof BigInteger))



    return new BigInteger(a, b, c)







  if (a != null) {



    if ("number" == typeof a) this.fromNumber(a, b, c)



    else if (b == null && "string" != typeof a) this.fromString(a, 256)



    else this.fromString(a, b)



  }



}







var proto = BigInteger.prototype







// duck-typed isBigInteger



proto.__bigi = require('../package.json').version



BigInteger.isBigInteger = function (obj, check_ver) {



  return obj && obj.__bigi && (!check_ver || obj.__bigi === proto.__bigi)



}







// Bits per digit



var dbits







// am: Compute w_j += (x*this_i), propagate carries,



// c is initial carry, returns final carry.



// c < 3*dvalue, x < 2*dvalue, this_i < dvalue



// We need to select the fastest one that works in this environment.







// am1: use a single mult and divide to get the high bits,



// max digit bits should be 26 because



// max internal value = 2*dvalue^2-2*dvalue (< 2^53)



function am1(i, x, w, j, c, n) {



  while (--n >= 0) {



    var v = x * this[i++] + w[j] + c



    c = Math.floor(v / 0x4000000)



    w[j++] = v & 0x3ffffff



  }



  return c



}

#' Get the logged in user's email and other info



#' 



#' @param id ID of the person to get the profile data for. 'me' to get current user.



#' 



#' @return A People resource



#' 



#' https://developers.google.com/+/web/api/rest/latest/people#resource-representations



#' 



#' @seealso https://developers.google.com/+/web/api/rest/latest/people



#' 



#' @export



#' 



#' @examples 



#' 



#' \dontrun{



#' library(googleAuthR)



#' library(googleID)



#' options(googleAuthR.scopes.selected = 



#'    c("https://www.googleapis.com/auth/userinfo.email",



#'      "https://www.googleapis.com/auth/userinfo.profile"))



#'                                         



#' googleAuthR::gar_auth()



#' 



#' ## default is user logged in



#' user <- get_user_info()



#' }



#' 



get_user_info <- function(id = "me"){







  



  url <- sprintf("https://www.googleapis.com/plus/v1/people/%s", id)



  



  g <- googleAuthR::gar_api_generator(url, "GET")



  



  req <- g()



  



  req$content



  



}







#' Whitelist check



#' 



#' After a user logs in, check to see if they are on a whitelist



#' 



#' @param user_info the object returned by \link{get_user_info}



#' @param whitelist A character vector of emails on whitelist



#' 



#' @return TRUE if on whitelist or no whitelist, FALSE if not



#' @export



#' 



#' @examples 



#' 



#' \dontrun{



#' library(googleAuthR)



#' library(googleID)



#' options(googleAuthR.scopes.selected = 



#'    c("https://www.googleapis.com/auth/userinfo.email",



#'      "https://www.googleapis.com/auth/userinfo.profile"))



#'                                         



#' googleAuthR::gar_auth()



#' 



#' ## default is user logged in



#' user <- get_user_info()



#' 



#' the_list <- whitelist(user, c("your@email.com", 



#'                               "another@email.com", 



#'                               "yet@anotheremail.com"))



#' 



#' if(the_list){



#'   message("You are on the list.")



#' } else {



#'   message("If you're not on the list, you're not getting in.")



#'}



#' 



#' 



#' 



#' }



whitelist <- function(user_info, whitelist = NULL){



  



  if(user_info$kind != "plus#person"){



    stop("Invalid user object used for user_info")



  }



  



  out <- FALSE



  



  if(is.null(whitelist)){



    message("No whitelist found")



    out <- TRUE



  }



  



  check <- user_info$emails$value



  



  if(is.null(check)){



    stop("No user email found")



  }



  



  if(any(check %in% whitelist)){



    message(check, " is in whitelist ")



    out <- TRUE



  } else {



    message(check, " is NOT on whitelist")



  }



  



  out



  



}
© 2020 GitHub, Inc.
